{"entries":[{"timestamp":1746566246326,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"radio.setGroup(1)  // Set the radio group to 1 for communication with the robot\n\n// Move forward when Button A is pressed\ninput.onButtonPressed(Button.A, function () {\n    radio.sendString(\"forward\")  // Send \"forward\" command to the robot\n    basic.showArrow(ArrowNames.North)  // Show an upward arrow indicating forward movement\n})\n\n// Move backward when Button B is pressed\ninput.onButtonPressed(Button.B, function () {\n    radio.sendString(\"backward\")  // Send \"backward\" command to the robot\n    basic.showArrow(ArrowNames.South)  // Show a downward arrow indicating backward movement\n})\n\n// Turn left when Button A + B is pressed\ninput.onButtonPressed(Button.AB, function () {\n    radio.sendString(\"left\")  // Send \"left\" command to the robot\n    basic.showArrow(ArrowNames.West)  // Show a leftward arrow indicating left turn\n})\n\n// Turn right when tilting right\ninput.onGesture(Gesture.TiltRight, function () {\n    radio.sendString(\"right\")  // Send \"right\" command to the robot\n    basic.showArrow(ArrowNames.East)  // Show a rightward arrow indicating right turn\n})\n\n// Stop movement when the logo is pressed\ninput.onLogoEvent(TouchButtonEvent.Pressed, function () {\n    radio.sendString(\"stop\")  // Send \"stop\" command to the robot\n    basic.showIcon(IconNames.No)  // Show \"No\" icon indicating stopping\n})\n\n// Display a happy face when the controller is ready\nbasic.showIcon(IconNames.Happy)\n"],[0,"\n"]],"start1":0,"start2":0,"length1":1405,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":234,"start2":234,"length1":32,"length2":31}]}]},{"timestamp":1746566273584,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"+_{hCWDA?~yTA8,(k9bq\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"2xt3#j`n$f}}rlKlhjAB\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8}]}]},{"timestamp":1746567082435,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":229,"start2":229,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1746566246325,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"controllor\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1746567082437}